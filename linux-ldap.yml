---
- name: Join Red Hat Linux server to AD domain
  hosts: Gold_Systems
  become: yes
  vars:
    ad_domain: lab-dc-01.bizzy-lab.com
    ad_user: "{{ lookup('env', 'DOMAIN_JOIN_USER') }}"
    ad_password: "{{ lookup('env', 'DOMAIN_JOIN_PASSWORD') }}"

  tasks:
  - name: Install required packages
    package:
      name:
        - realmd
        - sssd
        - samba-common
        - samba-common-tools
        - oddjob
        - oddjob-mkhomedir
        - adcli
        - chrony
      state: present

  - name: Ensure chrony is started and enabled
    service:
      name: chronyd
      state: started
      enabled: yes

  - name: Configure chrony for time synchronization
    blockinfile:
      path: /etc/chrony.conf
      block: |
        server {{ ad_domain }} iburst
        server time.windows.com iburst

  - name: Restart chrony service
    service:
      name: chronyd
      state: restarted

  - name: Check if FIPS mode is enabled
    command: cat /proc/sys/crypto/fips_enabled
    register: fips_check
    changed_when: false
    failed_when: false

  - name: Warn if FIPS mode is not enabled
    debug:
      msg: "Warning: FIPS mode is not enabled on this system."
    when: fips_check.stdout != '1'

  - name: Check DNS resolution for the AD domain
    command: nslookup {{ ad_domain }}
    register: nslookup_result
    ignore_errors: yes

  - name: Fail if DNS resolution fails
    fail:
      msg: "DNS resolution for the AD domain failed: {{ nslookup_result.stderr }}"
    when: nslookup_result.rc != 0

  - name: Discover the AD domain
    command: realm discover {{ ad_domain }}
    register: realm_discover_result
    ignore_errors: yes

  - name: Fail if realm discover fails
    fail:
      msg: "Unable to discover the AD domain: {{ realm_discover_result.stderr }}"
    when: realm_discover_result.rc != 0

  - name: Join the AD domain
    command: realm join -u {{ ad_user }} -p {{ ad_password }} -v {{ ad_domain }}
    register: join_result
    ignore_errors: yes

  - name: Check the AD join result
    fail:
      msg: "Unable to join the AD domain: {{ join_result.stderr }}"
    when: join_result.rc != 0

  - name: Restart SSSD service
    service:
      name: sssd
      state: restarted
      enabled: yes

  - name: Validate the AD join
    command: getent passwd {{ ad_user }}
    register: validate_result
    ignore_errors: yes

  - name: Check the validation result
    fail:
      msg: "AD join validation failed: {{ validate_result.stderr }}"
    when: validate_result.rc != 0
